swirl()
library(swirl)
swirl()
x <- c(44,NA,5,NA)
x <- x * 3
x * 3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z))
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na, na.rm= FALSE)
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>o]
x[x>0]
x[!is.na(x & X > 0)]
x[!is.na(x & x > 0)]
x[!is.na(x) & x > 0)]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identitical(vect,vect2)
identical(vect,vect2)
vect["bar"]
vect[bar]
vect[c("foo","bar")]
my_vector<- c(1:20)
my_vector[1:20]
my_vector(1:20)
my_vector<- c(1:20)
my_vector<- 1:20
my-vector
my_vector
dim(my_vector)
length(my_vector)
dim(my-vector) <- c(4,5)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matric <- my_vector
my_matrix <- my_vector
?"matrix"
?matrix
my_matrix2 <- matrix(1:20,nrow=4,ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(my_matrix,patients)
cbind(patients,my_matrix)
my_data <- data.frame(patients,mmy_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <-sample(10)
ints
ints > 5
which(ints>7)
any(ints < 0)
all(ints > 0)
exit
close
c
quit
update.packages("httr")
library(httr)
install.packages("httpuv")
library(httpuv)
library(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("github", key="7fc840a5e42dd0c702c2", secret="2d85dbc5d373e40509f541062f42633058dbbdd4")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
setwd("C:/Users/BPM/Downloads/DataScience/Assignment/M03-A1")
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileURL,destfile=("UCI_HAR.zip"))
unzip("UCI_HAR.zip")
file.rename("UCI HAR Dataset","data")
featurelist <- read.table("./data/features.txt",header = FALSE,stringsAsFactors = FALSE)
activitylabel <- read.table("./data/activity_labels.txt",header = FALSE,stringsAsFactors = FALSE)
Xtest <- read.table("./data/test/X_test.txt",header = FALSE,stringsAsFactors = FALSE)
Ytest <- read.table("./data/test/y_test.txt",header = FALSE,stringsAsFactors = FALSE)
subjecttest <- read.table("./data/test/subject_test.txt",header = FALSE,stringsAsFactors = FALSE)
Xtrain <- read.table("./data/train/X_train.txt",header = FALSE,stringsAsFactors = FALSE)
Ytrain <- read.table("./data/train/y_train.txt",header = FALSE,stringsAsFactors = FALSE)
subjecttrain <- read.table("./data/train/subject_train.txt",header = FALSE,stringsAsFactors = FALSE)
library(dplyr)
#create tbldf of Xtest
dpxtest <- tbl_df(Xtest)
dpxtrain <- tbl_df(Xtrain)
#create tbldf of Ytest
dpytest <- tbl_df(Ytest)
dpytrain <- tbl_df(Ytrain)
#rename values in ytest from number to activity names
for (i in 1:nrow(activitylabel))
{
dpytest <- mutate(dpytest, V1 = ifelse(V1 == i, activitylabel[[2]][[i]], V1))
dpytrain <- mutate(dpytrain, V1 = ifelse(V1 == i, activitylabel[[2]][[i]], V1))
}
#create tbldf of subject test
dpsubjecttest <- tbl_df(subjecttest)
dpsubjecttrain <- tbl_df(subjecttrain)
#combine 3 files of each set into one file (one each for test and train)
dptest <- bind_cols(dpsubjecttest,dpytest,dpxtest)
dptrain <- bind_cols(dpsubjecttrain,dpytrain,dpxtrain)
#rename column names accordingly. for features, read from feature list
colnames(dptrain)<- c("Subject","ActivityName",1:561)
colnames(dptest)<- c("Subject","ActivityName",1:561)
dp <- bind_rows(dptest,dptrain)
#rename column names accordingly. for features, read from feature list
colnames(dp)<- c("Subject","ActivityName",featurelist[[2]])
#remove unnecessary objects
remove("activitylabel","Xtest","Xtrain","Ytest","Ytrain","i","subjecttrain","subjecttest","featurelist","dpytrain","dpytest","dpxtrain","dpxtest","dptest","dptrain","dpsubjecttest","dpsubjecttrain")
# extract mean and std columns
dpMeanStd<-dp[,c("Subject","ActivityName",grep("mean|std", colnames(dp), value = TRUE))]
dpMeanStd$ActivityName <- as.factor(dpMeanStd$ActivityName)
dpMeanStd$Subject <- as.factor(dpMeanStd$Subject)
#create grouped table and then create summarised data.
dpGrp<-group_by(dpMeanStd,Subject,ActivityName)
TidyData<-summarise_each(dpGrp,funs(mean))
tempcolnames<-colnames(TidyData)
i <- 3
for (i in 3:length(tempcolnames))
{
tempcolnames[i]= paste("Avg.",tempcolnames[i],sep = "")
}
colnames(TidyData) <- tempcolnames
View(TidyData)
library(pacman)
if (!require("pacman")) install.packages("pacman")
if (!require("pacman")) install.packages("pacman")
if (!require("dplyr")) install.packages("dplyr")
tempcolnames
View(tempcolnames)
Print(tempcolnames)
print(tempcolnams)
print(tempcolnames)
write.table(tempcolnames,file="tempcol.txt",row.names = FALSE)
write.table(TidyData,file="TidyData.txt",row.names = FALSE)
featurelist <- read.table("./data/features.txt",header = FALSE,stringsAsFactors = FALSE)
class(featurelist)
activitylabel <- read.table("./data/activity_labels.txt",header = FALSE,stringsAsFactors = FALSE)
